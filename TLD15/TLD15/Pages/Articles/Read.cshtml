@page "{idFriendly}"
@using Common.Composition
@model TLD15.Pages.Articles.ReadFeature
@{
    ViewData[Globals.Page.Title] = $"{Model.Model.Title} | {Globals.Brand.Title}";
    ViewData[Globals.OpenGraph.Url] =
    $"https://{ViewContext.HttpContext.Request.Host}" +
            $"{ViewContext.HttpContext.Request.Path}";
}
<div class="articles-container">
    <div class="poster-container">
        <img src="/images/placeholder/article.png" alt="Background Image">
        <div class="article-image-overlay-division"
             data-tooltip="@Globals.Brand.Divisions[Model.Model.DivisionCode]">
            @Model.Model.DivisionCode.ToUpper()
        </div>
        <div class="article-image-overlay-date">
            @Model.Model.CreatedAt.ToString(Globals.Settings.DateFormat)
        </div>
        <div class="text-overlay">
            <h1>@Model.Model.Title</h1>
            <h2>@Model.Model.SubTitle</h2>
        </div>
    </div>
</div>

<style>
    .articles-container {
        margin-left: 5%;
        margin-right: 5%;
        padding: 15px;
        margin-top: 15px;
        text-align: center;
        align-content: center;
        background-color: var(--brand-color-first);
        color: var(--brand-color-third);
        padding-bottom: 20px;
    }

    ::deep .article-image-overlay-division {
        position: absolute;
        top: -1px;
        left: -1px;
        background-color: var(--color-background);
        color: var(--brand-color-third);
        border: 1px solid var(--brand-color-third);
        width: 70px;
        padding: 5px;
        height: 20px;
        font-size: 20px;
        font-weight: 600;
        text-align: center;
    }

    ::deep .article-image-overlay-date {
        position: absolute;
        top: -1px;
        right: -1px;
        background-color: var(--color-background);
        color: var(--brand-color-third);
        border: 1px solid var(--brand-color-third);
        width: 115px;
        padding: 5px;
        height: 20px;
        font-size: 17px;
        text-align: center;
    }


    /* Container for the div with image */
    .poster-container {
        border: 1px solid var(--brand-color-third);
        position: relative;
        width: 100%;
        height: 500px;
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
    }

        /* Image styles */
        .poster-container img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            filter: grayscale(100%);
            transition: filter 0.3s ease;
        }
            /* Hover effect on image */
            .poster-container img:hover {
                filter: grayscale(0%);
            }

    /* Title and Subtitle styling */
    .text-overlay {
        position: absolute;
        text-align: center;
        color: var(--brand-color-third);
        z-index: 1;
    }

    h1 {
        font-size: 50px;
        margin: 0;
        padding: 10px;
        background: var(--brand-color-first);
    }

    h2 {
        font-size: 30px;
        padding: 10px;
        background: var(--brand-color-first);
        margin-top: 10px;
    }

    img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        filter: grayscale(100%);
        transition: filter 0.3s ease;
    }
</style>

@foreach (var item in ReadFeature.SplitHtmlByHR(Model.Model.ContentHtml))
{
    <div class="articles-container">
        @Html.Raw(item)
    </div>
}
