@page "{idFriendly}"
@using Common.Composition
@using System.Globalization
@model TLD15.Pages.Articles.ReadModel

@{
    ViewData[Globals.Page.Title] = $"{Model.Model.Title} | {Globals.Brand.Title}";
    ViewData[Globals.Page.Description] = Model.Model.SubTitle;
    ViewData[Globals.OpenGraph.Url] = Globals.Brand.BaseUrl + ViewContext.HttpContext.Request.Path;
    ViewData[Globals.OpenGraph.Image] = $"{Model.Model.PosterUrl ?? "https://" + ViewContext.HttpContext.Request.Host + "/images/placeholder/article.png"}";
    ViewData[Globals.OpenGraph.ArticleAuthor] = Globals.Brand.Author;

    ViewData[Globals.OpenGraph.Locale] = Globals.Settings.Locale;
}

<style>
    .article-container {
        margin-left: 5%;
        margin-right: 5%;
        padding: 15px;
        margin-top: 15px;
        text-align: center;
        align-content: center;
        background-color: var(--brand-color-first);
        color: var(--brand-color-third);
    }

    .article-container-poster-division {
        position: absolute;
        top: -1px;
        left: -1px;
        background-color: var(--color-background);
        color: var(--brand-color-third);
        border: 1px solid var(--brand-color-third);
        width: 70px;
        padding: 5px;
        height: 20px;
        font-size: 20px;
        font-weight: 600;
        text-align: center;
    }

    .article-container-poster-date {
        position: absolute;
        top: -1px;
        right: -1px;
        background-color: var(--color-background);
        color: var(--brand-color-third);
        border: 1px solid var(--brand-color-third);
        width: 115px;
        padding: 5px;
        height: 20px;
        font-size: 17px;
        text-align: center;
    }

    .article-container-poster-version {
        position: absolute;
        top: 30px;
        right: -1px;
        background-color: var(--color-background);
        color: var(--brand-color-third);
        border: 1px solid var(--brand-color-third);
        width: 115px;
        padding: 5px;
        height: 20px;
        font-size: 17px;
        text-align: center;
    }

    .article-container-poster-container {
        border: 1px solid var(--brand-color-third);
        position: relative;
        width: 100%;
        height: 500px;
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .article-container img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        filter: grayscale(100%);
        transition: filter 0.3s ease;
    }

        .article-container img:hover {
            filter: grayscale(0%);
        }

    .article-container-poster-text-overlay {
        position: absolute;
        text-align: center;
        color: var(--brand-color-third);
        z-index: 1;
    }

        .article-container-poster-text-overlay h1 {
            font-size: 50px !important;
            margin: 0 !important;
            padding: 10px !important;
            background: var(--brand-color-first) !important;
        }

        .article-container-poster-text-overlay h2 {
            font-size: 30px !important;
            margin: 10px !important;
            padding: 10px !important;
            background: var(--brand-color-first) !important;
        }

    .article-container h1 {
        font-size: 50px;
        margin: 0;
        padding: 10px;
        background: var(--brand-color-first);
        font-family: 'Roboto', sans-serif;
    }

    .article-container h2 {
        font-size: 30px;
        margin-top: 0;
        background: var(--brand-color-first);
        font-family: 'Roboto', sans-serif;
    }
</style>

<article>
    <div class="article-container">
        <div class="article-container-poster-container">
            @if (string.IsNullOrEmpty(Model.Model.PosterUrl))
            {
                <img class="article-image" loading="lazy"
                     src="/images/placeholder/article.png"
                     alt="@Model.Model.PosterAlt"
                     aria-labelledby="@Model.Model.PosterAlt">
            }
            else
            {
                <img class="article-image" loading="lazy"
                     src="@Model.Model.PosterUrl"
                     alt="@Model.Model.PosterAlt"
                     aria-labelledby="@Model.Model.PosterAlt">
            }
            <div class="article-container-poster-division"
                 data-tooltip="@Globals.Brand.Divisions[Model.Model.DivisionCode]">
                @Model.Model.DivisionCode.ToUpper()
            </div>
            <div class="article-container-poster-date">
                <time datetime="@Model.Model.CreatedAt">@Model.Model.CreatedAt.ToString(Globals.Settings.DateFormat, CultureInfo.InvariantCulture)</time>
            </div>
            <div class="article-container-poster-version">
                <div>Version: @Model.Model.Version</div>
            </div>
            <div class="article-container-poster-text-overlay">
                <h1>@Model.Model.Title</h1>
                <h2>@Model.Model.SubTitle</h2>
            </div>
        </div>
    </div>

    @foreach (var item in Model.Model.GetContentHtmlSplitByHR())
    {
        <section class="article-container">
            @Html.Raw(item)
        </section>
    }
</article>