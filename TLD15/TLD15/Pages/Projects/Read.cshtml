@page "/projects/{id}"
@using TLD15.Composition
@using System.Globalization
@using TLD15.Helpers
@model TLD15.Pages.Projects.ReadModel

@{
    ViewData[Globals.Page.Title] = $"{Globals.Brand.Title} | {Model.Data.Title}";
    ViewData[Globals.Page.Description] = Model.Data.Subtitle;

    ViewData[Globals.Page.OpenGraph.Url] = Model.Host.TrimLast('/') + ViewContext.HttpContext.Request.Path;
    ViewData[Globals.Page.OpenGraph.Image] = Model.Data.PosterUrl;
    ViewData[Globals.Page.OpenGraph.Locale] = Globals.Settings.Locale;
    ViewData[Globals.Page.OpenGraph.ArticleAuthor] = Globals.Brand.Author;
}

@if (!ModelState.IsValid)
{
    <article class="article-content">
        @foreach (var error in ModelState.Values.SelectMany(v => v.Errors))
        {
            <p>@error.ErrorMessage</p>
        }
    </article>

    return;
}

<article>
    <div class="article-poster-container">
        @if (string.IsNullOrEmpty(Model.Data.PosterUrl))
        {
            <img loading="lazy" height="500"
                 src="/images/placeholder/article.png"
                 alt="@Model.Data.PosterAlt"
                 aria-labelledby="@Model.Data.PosterAlt">
        }
        else
        {
            <img loading="lazy" height="500"
                 src="@Model.Data.PosterUrl"
                 alt="@Model.Data.PosterAlt"
                 aria-labelledby="@Model.Data.PosterAlt">
        }
        <div class="article-poster-division"
             data-tooltip="@Model.Data.DivisionCode">
            @Model.Data.DivisionCode.ToUpper()
        </div>
        <div class="article-poster-date">
            <time datetime="@Model.Data.CreatedAt">@Model.Data.CreatedAt.ToString(Globals.Settings.DateFormat, CultureInfo.InvariantCulture)</time>
        </div>
        <div class="article-poster-version">
            <div>Version: @Model.Data.Version</div>
        </div>
        <div class="article-poster-text-overlay">
            <h1>@Model.Data.Title</h1>
            <div class="article-poster-text-overlay-sub">@Model.Data.Subtitle</div>
        </div>
    </div>


    <div class="component-container">
        <section class="component-content">
            @Html.Raw(Model.Data.ContentHtml)
        </section>
    </div>

    <div class="component-container">
        <h2 class="component-title">@Globals.Controls.Links</h2>
        <div class="external-links-container">
            @foreach (var link in Model.Data.Links)
            {
                <a class="external-button" href="@link.Value">
                    <div class="external-button-language">
                        @if (!string.IsNullOrEmpty(IconHelper.GetLanguage(@link.Key)))
                        {
                            @IconHelper.GetLanguage(@link.Key)
                        }
                    </div>
                    <img class="external-button-icon" loading="lazy"
                         height="50" width="50"
                         src="@IconHelper.GetIcon(@link.Key)"
                         alt="@link.Key">
                </a>
            }
        </div>
    </div>
</article>
